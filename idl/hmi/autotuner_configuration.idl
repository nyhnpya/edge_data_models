module Shell
{
    module Hmi
    {
        module AutoTunerConfiguration
        {
            //@copy-c-declaration static const char MODEL_STATE_REQUEST[] = "ModelStateRequest";
            /**
             * \brief Requested state change in the rotation system.
             *
             * | Variable          | Description                                         | Data Type           | 
             * | ----------------- | --------------------------------------------------- | ------------------- | 
             * | pipeInnerDiameter | id of requestor                                     | units::length::meter  | 
             * | pipeOuterDiameter | id of current objective                             | units::length::meter  | 
             */
            struct ModelStateRequest
            {
                boolean modelReset;
                double  pipeInnerDiameter;
                double  pipeOuterDiameter;
                double  slopeFilter;
                double  tauMax;
                double  tauMin;
                double  tauMultiplier;
                double  maxDeviation;
                double  minInterval;
            };

            //@copy-c-declaration static const char MODEL_STATE_STATE[] = "ModelStateState";
            /**
             * \brief Requested state change in the rotation system.
             *
             * | Variable          | Description                                         | Data Type           | 
             * | ----------------- | --------------------------------------------------- | ------------------- | 
             * | pipeInnerDiameter | id of requestor                                     | units::length::meter  | 
             * | pipeOuterDiameter | id of current objective                             | units::length::meter  | 
             */
            struct ModelStateState
            {
                double  pipeInnerDiameter;
                double  pipeOuterDiameter;
                double  slopeFilter;
                double  tauMax;
                double  tauMin;
                double  tauMultiplier;
                double  maxDeviation;
                double  minInterval;
                boolean tunerEnabled;
            };

            //@copy-c-declaration static const char DIFFP_TUNING_REQUEST[] = "DiffpTuningRequest";
            struct DiffpTuningRequest
            {
                double  diffPFilter;
                double  diffPD;
                double  diffPF;
                double  diffPEps;
                boolean diffPEpsManual;
                double  diffPKcMin;
                double  diffPKcMax;
                double  diffPTiMin;
                double  diffPTiMax;
            };

            //@copy-c-declaration static const char DIFFP_TUNING_STATE[] = "DiffpTuningState";
            struct DiffpTuningState
            {
                double  diffPFilter;
                double  diffPD;
                double  diffPF;
                double  diffPEps;
                boolean diffPEpsManual;
                double  diffPKcMin;
                double  diffPKcMax;
                double  diffPTiMin;
                double  diffPTiMax;
                double  diffPInitK;
                double  diffPInitTau;
                double  diffPInitPreFilter;
                double  diffPR1;
                double  diffPR2;
            };
    
            //@copy-c-declaration static const char WOB_TUNING_REQUEST[] = "WobTuningRequest";
            struct WobTuningRequest
            {
                double  wobFilter;
                double  wobD;
                double  wobF;
                double  wobEps;
                boolean wobEpsManual;
                double  wobKcMin;
                double  wobKcMax;
                double  wobTiMin;
                double  wobTiMax;
            };

            //@copy-c-declaration static const char WOB_TUNING_STATE[] = "WobTuningState";
            struct WobTuningState
            {
                double  wobFilter;
                double  wobD;
                double  wobF;
                double  wobEps;
                boolean wobEpsManual;
                double  wobKcMin;
                double  wobKcMax;
                double  wobTiMin;
                double  wobTiMax;
                double  wobInitK;
                double  wobInitTau;
                double  wobInitPreFilter;
                double  wobR1;
                double  wobR2;
            };
    
            //@copy-c-declaration static const char TORQUE_TUNING_REQUEST[] = "TorqueTuningRequest";
            struct TorqueTuningRequest
            {
                double  torqueFilter;
                double  torqueD;
                double  torqueF;
                double  torqueEps;
                boolean torqueEpsManual;
                double  torqueKcMin;
                double  torqueKcMax;
                double  torqueTiMin;
                double  torqueTiMax;
            };

            //@copy-c-declaration static const char TORQUE_TUNING_STATE[] = "TorqueTuningState";
            struct TorqueTuningState
            {
                double  torqueFilter;
                double  torqueD;
                double  torqueF;
                double  torqueEps;
                boolean torqueEpsManual;
                double  torqueKcMin;
                double  torqueKcMax;
                double  torqueTiMin;
                double  torqueTiMax;
                double  torqueInitK;
                double  torqueInitTau;
                double  torqueInitPreFilter;
                double  torqueR1;
                double  torqueR2;
            };
        };
    };
};
