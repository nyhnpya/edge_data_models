#include "base_data_types.idl"

module Shell
{
    module Hmi
    {
        module AutoTunerConfiguration
        {
            // QoSLibrary: EdgeBaseLibrary
            // QoSProfile: ConfigProfile
            //@copy-c-declaration static const char MODEL_STATE_REQUEST[] = "ModelStateRequest";
            /**
             * \brief Requested state change in the rotation system.
             *
             * | Variable          | Description                                         | Data Type           | 
             * | ----------------- | --------------------------------------------------- | ------------------- | 
             * | pipeInnerDiameter | id of requestor                                     | units::length::meter  | 
             * | pipeOuterDiameter | id of current objective                             | units::length::meter  | 
             */
            struct ModelStateRequest
            {
                boolean modelReset;
                double  pipeInnerDiameter;
                double  pipeOuterDiameter;
                double  slopeFilter;
                double  tauMax;
                double  tauMin;
                double  tauMultiplier;
                double  maxDeviation;
                double  minInterval;
            };

            // QoSLibrary: EdgeBaseLibrary
            // QoSProfile: ConfigProfile
            //@copy-c-declaration static const char MODEL_STATE[] = "ModelState";
            /**
             * \brief Requested state change in the rotation system.
             *
             * | Variable          | Description                                         | Data Type           | 
             * | ----------------- | --------------------------------------------------- | ------------------- | 
             * | pipeInnerDiameter | id of requestor                                     | units::length::meter  | 
             * | pipeOuterDiameter | id of current objective                             | units::length::meter  | 
             */
            struct ModelState
            {
                double  pipeInnerDiameter;
                double  pipeOuterDiameter;
                double  slopeFilter;
                double  tauMax;
                double  tauMin;
                double  tauMultiplier;
                double  maxDeviation;
                double  minInterval;
                boolean tunerEnabled;
            };

            // QoSLibrary: EdgeBaseLibrary
            // QoSProfile: ConfigProfile
            //@copy-c-declaration static const char AUTOTUNER_TUNING_REQUEST[] = "AutoTunerTuningRequest";
            struct AutoTunerTuningRequest
            {
                string<36>  id;          //@key
                double  filter;
                double  d;
                double  f;
                double  epsilon;
                boolean epsilonManual;
                double  kcMin;
                double  kcMax;
                double  tiMin;
                double  tiMax;
            };

            // QoSLibrary: EdgeBaseLibrary
            // QoSProfile: ConfigProfile
            //@copy-c-declaration static const char AUTOTUNER_TUNING_STATE[] = "AutoTunerTuningState";
            struct AutoTunerTuningState
            {
                string<36> id;          //@key
                double  filter;
                double  d;
                double  f;
                double  epsilon;
                boolean epsilonManual;
                double  kcMin;
                double  kcMax;
                double  tiMin;
                double  tiMax;
                double  initK;
                double  initTau;
                double  initPreFilter;
                double  r1;
                double  r2;
            };
    
        };
    };
};
