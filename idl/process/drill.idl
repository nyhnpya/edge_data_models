#include "base_data_types.idl"
module nec
{
    module process
    {
        // QoSLibrary: EdgeBaseLibrary
        // QoSProfile: EdgeBaseProfile

        //@copy-c-declaration static const char DRILL_REQUEST[] = "DrillRequest";

        /**
         * \ingroup Request
         * 
         * \brief Requested state change in the drilling system.
         *
         * <div id='drill_request' />
         * Drill Request is an epermeral topic which can only be published when the current system objective is "Drilling". 
         * This topic is used to request changes in the operational drilling parameters. 
         * This is an aperiodic topic and should only be published when a value changes.    
         * 
         * #### Drill Request QoS
         * The following QoS events are available for any observer who subscribes to the Drill Requst Topic.  
         * 
         * | Policy                 | Definition                |
         * | :-------------------  | :--------------------------|
         * | Reliability           | Reliable                   |
         * | Durability            | Transient Local Durability |
         * | History               | Last sample                |
         * | OnDataAvailable       | |
         * | OnLivelinessLost      | | 
         * | OnDataDisposed        | | 
         *
         * | Variable           | Description                                      | Data Type           |
         * | ------------------ | -------------------------------------------------| --------------------|
         * | id                 | id of requestor                                  | DataTypes::Uuid     |
         * | objectiveId        | id of current objective                          | DataTypes::Uuid     |
         * | priority           | priority of the request                          | DataTypes::Priority |
         * | timeNeeded         | time requester needs the resource                | DataTypes::Time     |
         * | estimatedDuration | estimated duration requestor needs the resource   | DataTypes::Time     |
         * | ropTarget          | target rate of penetration                       | units::velocity::meters_per_second |
         * | wobTarget          | target weight on bit                             | units::force::newton |
         * | diffPressureTarget | target differential pressure                     | units::pressure::pascal  |
         * | torqueTarget       | target differential torque                       | units::torque::newton_meter |
         * | ropMode            | rate of penetration axis enabled                 | boolean             |
         * | wobMode            | weight on bit axis enabled                       | boolean             |
         * | diffPressureMode   | differential pressure axis enabled               | boolean             |
         * | torqueMode         | differential torque mode enabled                 | boolean             |
         */
        struct DrillRequest
        {
            DataTypes::Uuid     id; //@key
            DataTypes::Uuid     objectiveId;
            DataTypes::Priority priority;
            DataTypes::Time     timeNeeded;
            DataTypes::Time     estimatedDuration;
            double              ropTarget;
            double              wobTarget;
            double              diffPressureTarget;
            double              torqueTarget;
            boolean             ropMode;
            boolean             wobMode;
            boolean             diffPressureMode;
            boolean             torqueMode;
        };

        // QoSLibrary: EdgeBaseLibrary
        // QoSProfile: EdgeBaseProfile

        //@copy-c-declaration static const char DRILL_OBJECTIVE[] = "DrillObjective";

        /**
         * \ingroup Objective
         *
         * \brief current requested state change in the drilling system.
         *
         * | Variable           | Description                                      | Data Type       | Unit  |
         * | ------------------ | ------------------------------------------------ | ----------------| ------|
         * | id                 | id of requestor                                  | DataTypes::Uuid | N/A   |
         * | objectiveId        | id of current objective                          | DataTypes::Uuid | N/A   |
         * | estimatedDuration  | estimated duration requestor needs the resource  | DataTypes::Time | N/A   |
         * | ropTarget          | target rate of penetration                       | units::velocity::meters_per_second |
         * | wobTarget          | target weight on bit                             | units::force::newton |
         * | diffPressureTarget | target differential pressure                     | units::pressure::pascal  |
         * | torqueTarget       | target differential torque                       | units::torque::newton_meter |
         * | ropMode            | rate of penetration axis enabled                 | boolean             | N/A   |
         * | wobMode            | weight on bit axis enabled                       | boolean             | N/A   |
         * | diffPressureMode   | differential pressure axis enabled               | boolean             | N/A   |
         * | torqueMode         | differential torque mode enabled                 | boolean             | N/A   |
         */
        struct DrillObjective
        {
            DataTypes::Uuid     id; //@key
            DataTypes::Uuid     objectiveId;
            DataTypes::Time     estimatedDuration;
            double              ropTarget;
            double              wobTarget;
            double              diffPressureTarget;
            double              torqueTarget;
            boolean             ropMode;
            boolean             wobMode;
            boolean             diffPressureMode;
            boolean             torqueMode;
        };

        // QoSLibrary: EdgeBaseLibrary
        // QoSProfile: EdgeBaseProfile

        //@copy-c-declaration static const char DRILL_STATE[] = "DrillState";

        /**
         * \ingroup Actual
         *
         * \brief current state of the drilling system.
         *
         * The Drill State topic will only be published when the current system objective is "Drilling". 
         * The Drill State is an aperiodic interface which is published on change.  
         * This topic is available by any actor of the system interested in observing the current state of the drilling process.  
         *
         * <div id='drilling_state_qos' />
         * The following QoS policies are available for any observer of the Drill State Topic.  
         * 
         * | Policy                 | Definition                |
         * | :-------------------  | :--------------------------|
         * | Reliability           | Reliable                   |
         * | Durability            | Transient Local Durability |
         * | History               | Last sample                |
         * | OnDataAvailable       | |
         * | OnLivelinessLost      | | 
         * | OnDataDisposed        | | 
         *
         * | Variable           | Description                            | Data Type         |
         * | ------------------ | -------------------------------------- | ----------------- |
         * | id                 | id of requestor                        | DataTypes::Uuid   |
         * | objectiveId        | id of current objective                | DataTypes::Uuid   |
         * | timestamp          | timestamp when the data was published. | DataTypes::Time   |
         * | status             | status of drilling system              | Datatypes::Status |
         * | ropActual          | Actual measured rate of penetration (ROP) | units::velocity::meters_per_second |
         * | wobActual          | Actual measured weight on bit (WOB)       | units::force::newton |
         * | diffPressureActual | actual differential pressure           | units::pressure::pascal  |
         * | torqueActual       | actual differential torque             | units::torque::newton_meter |
         * | ropLimit           | machine rate of penetration limit      | units::velocity::meters_per_second |
         * | wobLimit           | machine weight on bit limit            | units::force::newton |
         * | diffPressureLimit  | machine differential pressure limit    | units::pressure::pascal  |
         * | torqueLimit        | machine differential torque limit      | units::torque::newton_meter |
         * | ropMode            | rate of penetration axis enabled       | boolean           |
         * | wobMode            | weight on bit axis enabled             | boolean           |
         * | diffPressureMode   | differential pressure axis enabled     | boolean           |
         * | torqueMode         | differential torque mode enabled       | boolean           |
         * | ropTarget          | target rate of penetration             | units::velocity::meters_per_second |
         * | wobTarget          | target weight on bit                   | units::force::newton |
         * | diffPressureTarget | target differential pressure           | units::pressure::pascal  |
         * | torqueTarget       | target differential torque             | units::torque::newton_meter |
         */
        struct DrillState
        {
            DataTypes::Uuid id; //@key
            DataTypes::Uuid objectiveId;
            DataTypes::Time timestamp;
            double          ropActual;
            double          wobActual;
            double          diffPressureActual;
            double          torqueActual;
            double          ropLimit;
            double          wobLimit;
            double          diffPressureLimit;
            double          torqueLimit;
            boolean         ropMode;
            boolean         wobMode;
            boolean         diffPressureMode;
            boolean         torqueMode;
            double          ropTarget;
            double          wobTarget;
            double          diffPressureTarget;
            double          torqueTarget;
            boolean         bitOnBottom;
        };
    };
};
