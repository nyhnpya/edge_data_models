#include "base_data_types.idl"

module nec
{
    module process
    {
        // QoSLibrary: EdgeBaseLibrary
        // QoSProfile: EdgeBaseProfile

        //@copy-c-declaration static const char CIRCULATE_REQUEST[] = "CirculateRequest";

        /**
         *
         * \ingroup Request
         *
         * \brief requested state change in the circulation system.
         *
         * | Variable          | Description                                         | Data Type         |
         * | ----------------- | ----------------------------------------------------| ------------------|
         * | id                | id of requestor                                     | DataTypes::Uuid   | 
         * | objectiveId       | id of current objective                             | DataTypes::Uuid   | 
         * | priority          | priority of the request                             | DataTypes::Priority | 
         * | timeNeeded        | time requester needs the resource                   | DataTypes::Time   | 
         * | estimatedDuration | estimated duration requestor needs the resource     | DataTypes::Time   | 
         * | targetFlowRate    | requetsed flow rate                                 | units::volume_velocity::cubic_meters_per_second |
         */
        struct CirculateRequest
        {
            DataTypes::Uuid     id; //@key   
            DataTypes::Uuid     objectiveId;
            DataTypes::Priority priority;
            DataTypes::Time     timeNeeded;
            DataTypes::Time     estimatedDuration;
            double              targetFlowRate;
        };

        // QoSLibrary: EdgeBaseLibrary
        // QoSProfile: EdgeBaseProfile

        //@copy-c-declaration static const char CIRCULATE_OBJECTIVE[] = "CirculateObjective";

        /**
         *
         * \ingroup Objective
         *
         * \brief current requested state change in the circulation system.
         *
         * | Variable          | Description                                      | Data Type        |
         * | ----------------- | ------------------------------------------------ | ---------------- |
         * | id                | id of requestor                                  | DataTypes::Uuid  |
         * | objectiveId       | id of current objective                          | DataTypes::Uuid  |
         * | estimatedDuration | estimated duration requestor needs the resource  | DataTypes::Time  |
         * | targetFlowRate    | requetsed flow rate                              | units::volume_velocity::cubic_meters_per_second |
         */
        struct CirculateObjective
        {
            DataTypes::Uuid     id; //@key
            DataTypes::Uuid     objectiveId;
            DataTypes::Time     estimatedDuration;
            double              targetFlowRate;
        };

        // QoSLibrary: EdgeBaseLibrary
        // QoSProfile: EdgeBaseProfile

        //@copy-c-declaration static const char CIRCULATE_STATE[] = "CirculateState";

        /**
         *
         * \ingroup Actual
         *
         * \brief current state of circulation system.
         *
         * | Variable                | Description                            | Data Type         |
         * | ----------------------- | ---------------------------------------| ------------------|
         * | id                      | id of requestor                        | DataTypes::Uuid   |
         * | timestamp               | timestamp when the data was published. | DataTypes::Time   |
         * | status                  | status of ciruclation system           | Datatypes::Status |
         * | actualFlowRate          | actual flow rate                       | units::volume_velocity::cubic_meters_per_second |
         * | actualStandpipePressure | actual standpipe pressure              | units::pressure::pascal      |
         * | minFlowRate             | minimum machine flow rate              | units::volume_velocity::cubic_meters_per_second |
         * | maxFlowRate             | maximum machine flow rate              | units::volume_velocity::cubic_meters_per_second |
         * | minStandpipePressure    | minimum machine standpipe pressure     | units::pressure::pascal      |
         * | maxStandpipePressure    | maximum machine standpipe pressure     | units::pressure::pascal      |
         * | targetFlowRate    | requetsed flow rate                          | units::volume_velocity::cubic_meters_per_second |
         */
        struct CirculateState
        {
            DataTypes::Uuid   id;           //@key
            DataTypes::Uuid   objectiveId; 
            DataTypes::Time   timestamp;
            DataTypes::Status status;
            double            actualFlowRate;
            double            actualStandpipePressure;
            double            minFlowRate;
            double            maxFlowRate;
            double            minStandpipePressure;
            double            maxStandpipePressure;
            double            targetFlowRate;
        };
    };
};
