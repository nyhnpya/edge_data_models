#include "base_data_types.idl"

module AutoDrillerConfiguration
{
    //@copy-c-declaration static const char HMI_REQUEST[] = "HmiRequest";
    struct HmiRequest
    {
        DataTypes::Uuid   id;           //@key
        DataTypes::Time   timestamp;
        double  differentialPressureKpCalculated;
        double  differentialPressureKpCurrent;
        double  differentialPressureTiCalculated;
        double  differentialPressureTiCurrent;
        double  rateOfPenetrationKpCalculated;
        double  rateOfPenetrationKpCurrent;
        double  rateOfPenetrationTiCalcualted;
        double  rateOfPenetrationTiCurrent;
        double  torqueKpCalculated;
        double  torqueKpCurrent;
        double  torqueTiCalculated;
        double  toqueTiCurrent;
        double  weightOnBitKpCalculated;
        double  weightOnBitKpCurrent;
        double  weightOnBitTiCalculated;
        double  weightOnBitTiCurrent;
        long    mode;
        double  modeController;
        double  onDataAvailable;
        double  onLivelinessLost;
        double  modelOneDifferentialPressureRequestK;
        double  modelOneDifferentialPressureRequestTau;
        double  modelOneRateOfPenetrationRequestK;
        double  modelOneRateOfPenetrationRequestTau;
        double  modelOneTorqueRequestK;
        double  modelOneTorqueRequestTau;
        double  modelOneWeightOnBitRequestK;
        double  modelOneWeightOnBitRequestTau;
        double  modelTwoDifferentialPressureRequestK;
        double  modelTwoDifferentialPressureRequestTau;
        double  modelTwoRateOfPenetrationRequestK;
        double  modelTwoRateOfPenetrationRequestTau;
        double  modelTwoTorqueRequestK;
        double  modelTwoTorqueRequestTau;
        double  modelTwoWeightOnBitRequestK;
        double  modelTwoWeightOnBitRequestTau;
        long    status;
        boolean tuningDisable;
        boolean tuningEnable;
    };

    //@copy-c-declaration static const char HMI_STATE[] = "HmiState";
    struct HmiState
    {
        DataTypes::Uuid   id;           //@key
        DataTypes::Time   timestamp;
        long    mode;
        long    modeController;
        boolean modelReset;
        double  pipeInnerDiameter;
        double  pipeOuterDiameter;
        double  slopeFilter;
        double  tauMax;
        double  tauMin;
        double  tauMultiplier;
        double  differentialPressureInitializeK;
        double  differentialPressureInitializeTau;
        double  differentialPressureInitializePreFilter;
        double  differentialPressureR1;
        double  differentialPressureR2;
        double  rateOfPenetrationInitializeK;
        double  rateOfPenetrationInitializeTau;
        double  rateOfPenetrationInitializePreFilter;
        double  rateOfPenetrationInitializeR1;
        double  rateOfPenetrationInitializeR2;
        double  torqueInitializeK;
        double  torqueInitializeTau;
        double  torqueInitializePreFilter;
        double  torqueInitializeR1;
        double  torqueInitializeR2;
        double  weightOnBitInitializeK;
        double  weightOnBitInitializeTau;
        double  weightOnBitInitializePreFilter;
        double  weightOnBitInitializeR1;
        double  weightOnBitInitializeR2;
        double  devMin;
        double  intervalMin;
        double  differentialPressureFilter;
        double  differentialPressureKcMax;
        double  differentialPressureKcMin;
        double  differentialPressureTdMax;
        double  differentialPressureTdMin;
        double  differentialPressureTiMax;
        double  differentialPressureTiMin;
        double  differentialPressureD;
        double  differentialPressureEps;
        boolean differentialPressureEpsManual;
        double  differentialPressureF;
        double  rateOfPenetrationFilter;
        double  rateOfPenetrationKcMax;
        double  rateOfPenetrationKcMin;
        double  rateOfPenetrationTdMax;
        double  rateOfPenetrationTdMin;
        double  rateOfPenetrationTiMax;
        double  rateOfPenetrationTiMin;
        double  rateOfPenetrationD;
        double  rateOfPenetrationEps;
        boolean rateOfPenetrationEpsManual;
        double  rateOfPenetrationF;
        double  weightOnBitFilter;
        double  weightOnBitKcMax;
        double  weightOnBitKcMin;
        double  weightOnBitTdMax;
        double  weightOnBitTdMin;
        double  weightOnBitTiMax;
        double  weightOnBitTiMin;
        double  weightOnBitD;
        double  weightOnBitEps;
        boolean weightOnBitEpsManual;
        double  weightOnBitF;
        double  torqueFilter;
        double  torqueKcMax;
        double  torqueKcMin;
        double  torqueTdMax;
        double  torqueTdMin;
        double  torqueTiMax;
        double  torqueTiMin;
        double  torqueD;
        double  torqueEps;
        boolean torqueEpsManual;
        double  torqueF;
        long    status;
        boolean tuningDisable;
        boolean tuningEnable;
    };
};
