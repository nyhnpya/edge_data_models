#include "base_data_types.idl"

module AutoDrillerConfiguration
{
    struct HmiRequest
    {
        DataTypes::Uuid   id;           //@key
        DataTypes::Time   timestamp;
        double kpKpCalculated;
        double deltaPressureKpCurrent;
        double dpTiCalculated;
        double dpTiCurrent;
        double ropKpCalculated;
        double ropKpCurrent;
        double ropTiCalcualted;
        double ropTiCurrent;
        double torqueKpCalculated;
        double torqueKpCurrent;
        double torqueTiCalculated;
        double toqueTiCurrent;
        double wobKpCalculated;
        double wobKpCurrent;
        double wobTiCalculated;
        double wobTiCurrent;
        double mode;
        double modeController;
        double onDataAvailable;
        double onLivelinessLost;
        double modelOneDpRequestK;
        double modelOneDpRequestTau;
        double modelOneRopRequestK;
        double modelOneRopRequestTau;
        double modelOneTorqueRequestK;
        double modelOneTorqueRequestTau;
        double modelOneWobRequestK;
        double modelOneWobRequestTau;
        double modelTwoDpRequestK;
        double modelTwoDpRequestTau;
        double modelTwoRopRequestK;
        double modelTwoRopRequestTau;
        double modelTwoTorqueRequestK;
        double modelTwoTorqueRequestTau;
        double modelTwoWobRequestK;
        double modelTwoWobRequestTau;
        double status;
        double tuningDisable;
        double tuningEnable;
    };

    struct HmiState
    {
        DataTypes::Uuid   id;           //@key
        DataTypes::Time   timestamp;
        double mode;
        double modeController;
        double modelReset;
        double pipeInnerDiameter;
        double pipeOuterDiameter;
        double differentialPressureInitializeK;
        double differentialPressureInitializeTau;
        double differentialPressurePreFilter;
        double differentialPressureR1;
        double differentialPressureR2;
        double rateOfPenetrationInitializeK;
        double rateOfPenetrationInitializeTau;
        double rateOfPenetrationInitializePreFilter;
        double rateOfPenetrationInitializeR1;
        double rateOfPenetrationInitializeR2;
        double torqueInitializeK;
        double torqueInitializeTau;
        double torqueInitializePreFilter;
        double torqueInitializeR1;
        double torqueInitializeR2;
        double wobInitializeK;
        double wobInitializeTau;
        double wobInitializePreFilter;
        double wobInitializeR1;
        double wobInitializeR2;
        double devMin;
        double intervalMin;
        double differentialPressureFilter;
        double differentialPressureKcMax;
        double differentialPressureKcMin;
        double differentialPressureTdMax;
        double differentialPressureTdMin;
        double differentialPressureTiMax;
        double differentialPressureTiMin;
        double differentialPressureD;
        double differentialPressureEps;
        double differentialPressureEpsManual;
        double differentialPressureF;
        double rateOfPenetrationFilter;
        double rateOfPenetrationKcMax;
        double rateOfPenetrationKcMin;
        double rateOfPenetrationTdMax;
        double rateOfPenetrationTdMin;
        double rateOfPenetrationTiMax;
        double rateOfPenetrationTiMin;
        double rateOfPenetrationD;
        double rateOfPenetrationEps;
        double rateOfPenetrationEpsManual;
        double rateOfPenetrationF;
        double weightOnBitFilter;
        double weightOnBitKcMax;
        double weightOnBitKcMin;
        double weightOnBitTdMax;
        double weightOnBitTdMin;
        double weightOnBitTiMax;
        double weightOnBitTiMin;
        double weightOnBitD;
        double weightOnBitEps;
        double weightOnBitEpsManual;
        double weightOnBitF;
        double torqueFilter;
        double torqueKcMax;
        double torqueKcMin;
        double torqueTdMax;
        double torqueTdMin;
        double torqueTiMax;
        double torqueTiMin;
        double torqueD;
        double torqueEps;
        double torqueEpsManual;
        double torqueF;
        double status;
        double tuningDisable;
        double tuningEnable;
    };
};
